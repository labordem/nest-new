version: '3.7'

networks:
  network:
    name: ${API_NAME}

volumes:
  pgdata:

services:
  reverse-proxy:
    image: nginx:1.18.0-alpine
    volumes:
      - ./docker/reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:z
      - ./docker/reverse-proxy/ssl:/etc/nginx/ssl:z
    ports:
      - 80:80
      - 443:443
    networks:
      - network
    depends_on:
      - api

  api:
    build:
      context: .
      target: production
    command: ['node', 'dist/src/main']
    env_file: ./.env
    environment:
      - NODE_ENV=production
      - PORT=${API_PORT}
      - DB_HOST=db
    networks:
      - network
    depends_on:
      - db

  db:
    image: postgres:13.1-alpine
    command: -p ${DB_PORT}
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data:z
    networks:
      - network
